import BaseConfig from './BaseConfig';
export default class Config extends BaseConfig {
    getLogLevel(): string;
    throwOnNotModule(): boolean;
    getExtensionsOfModules(): string[];
    skipExtensionsOfModules(): string[];
    getModulesPaths(): string[];
    getModuleNamePattern(): string;
    getInfluxDBToken(): import("./BaseConfig").SecretString;
    getInfluxDBOrg(): string;
    getInfluxDBBucket(): string;
    getInfluxURL(): string;
    throwOnEventUnhandledException(): boolean;
    dontThrowOnCriticalError(): boolean;
    getConsumerPushMetrics(): boolean;
    getAutoCommitThreshold(): number;
    getAutoCommitInterval(): number;
    getAddExtraToJournalLogs(): boolean;
    getFailEventOnSingleRuleFail(): boolean;
    getPluginClassNamesForcePostfix(): boolean;
    getPluginModuleNamesForcePostfix(): boolean;
    getKafkaClientID(): string;
    getKafkaBrokers(): string[];
    getDBUser(throwOnEmpty?: boolean): string;
    getDBHost(throwOnEmpty?: boolean): string;
    getDBName(throwOnEmpty?: boolean): string;
    getDBPasswordSecret(throwOnEmpty?: boolean): import("./BaseConfig").SecretString;
    getDBPort(): number;
    isDistributedLocksEnabled(): boolean;
    getDistributedLocksMaxWaitTimeInSeconds(): number;
    isContinueOnFailedAcquireLock(): boolean;
    isSchemaFileMandatory(): boolean;
}

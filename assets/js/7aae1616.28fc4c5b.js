"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[181],{8727:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var t=s(4848),r=s(8453);const a={sidebar_position:4},i="Consumers in the Schema",o={id:"getting-started/consumers-schema",title:"Consumers in the Schema",description:"In our example schema, we have a single consumer named new-orders-consumer, of type kafka.",source:"@site/docs/getting-started/consumers-schema.md",sourceDirName:"getting-started",slug:"/getting-started/consumers-schema",permalink:"/docs/getting-started/consumers-schema",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Entities/Events/Rules in the Schema",permalink:"/docs/getting-started/entities-events-rules-namespace-schema"},next:{title:"The Modules",permalink:"/docs/getting-started/the-modules"}},c={},d=[];function h(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"consumers-in-the-schema",children:"Consumers in the Schema"})}),"\n",(0,t.jsxs)(n.p,{children:["In our example schema, we have a single consumer named ",(0,t.jsx)(n.code,{children:"new-orders-consumer"}),", of type ",(0,t.jsx)(n.code,{children:"kafka"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "name": "new-orders-consumer",\n  "type": "kafka",\n  "eventDispatcher": "new-order-dispatcher",\n  "config": {\n    "groupId": "group-id-1",\n    "topics": "new-orders",\n    "fromBeginning": true\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["It's event dispatcher is ",(0,t.jsx)(n.code,{children:"new-order-dispatcher"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"An event dispatcher is responsible for taking in a Kafka message and mapping it into a structure the engine can understand."}),"\n",(0,t.jsxs)(n.p,{children:["If you ",(0,t.jsx)(n.a,{href:"https://github.com/ralphv/gallifrey-rules-sample/blob/main/src/modules/providers/NewOrdersDispatcher.ts#L16",children:"check the code"})," you can see how the kafka message comes in and how we translate it into a ",(0,t.jsx)(n.a,{href:"https://github.com/ralphv/gallifrey-rules/blob/main/src/GallifreyEventType.ts#L4",children:"Gallifrey Rules event"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Under each consumer you have a ",(0,t.jsx)(n.code,{children:"config"})," which might be different for different types of consumers. In this example, it's of type ",(0,t.jsx)(n.a,{href:"https://github.com/ralphv/gallifrey-rules/blob/main/src/KafkaConsumer.ts#L309",children:"interface KafkaConsumerConfig"})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);
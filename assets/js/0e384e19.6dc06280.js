"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[976],{619:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var s=i(4848),r=i(8453);const t={sidebar_position:1},a="What is Gallifrey Rules?",o={id:"intro",title:"What is Gallifrey Rules?",description:"Gallifrey-Rules is a sophisticated Node.js library written in TypeScript, designed to streamline and enhance the management of real-time event-driven architectures.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/docs/getting-started/"}},l={},c=[{value:"Example Scenario: E-commerce Order Processing",id:"example-scenario-e-commerce-order-processing",level:3},{value:"Introducing Gallifrey-Rules",id:"introducing-gallifrey-rules",level:2},{value:"Key Benefits for Developers",id:"key-benefits-for-developers",level:3},{value:"Getting Started",id:"getting-started",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"what-is-gallifrey-rules",children:"What is Gallifrey Rules?"})}),"\n",(0,s.jsx)(n.h1,{id:"gallifrey-rules-a-comprehensive-event-handling-framework-for-nodejs",children:"Gallifrey-Rules: A Comprehensive Event Handling Framework for Node.js"}),"\n",(0,s.jsx)(n.p,{children:"Gallifrey-Rules is a sophisticated Node.js library written in TypeScript, designed to streamline and enhance the management of real-time event-driven architectures."}),"\n",(0,s.jsxs)(n.p,{children:["In the realm of real-time event consumption, systems often operate as black boxes. Typically, an entry point function pulls events from streaming platforms like ",(0,s.jsx)(n.a,{href:"https://kafka.apache.org/",children:"Apache Kafka."})," These consumers execute business logic, retrieve necessary data, and perform state mutations within the system."]}),"\n",(0,s.jsx)(n.h3,{id:"example-scenario-e-commerce-order-processing",children:"Example Scenario: E-commerce Order Processing"}),"\n",(0,s.jsx)(n.p,{children:"Consider an e-commerce platform where a user adds items to their cart and completes the checkout process. The backend saves the order information to a database and then triggers a series of asynchronous operations through events to process the new order. These operations might include:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Sending an email to the user confirming order creation."}),"\n",(0,s.jsx)(n.li,{children:"Preparing items for packaging and shipment."}),"\n",(0,s.jsx)(n.li,{children:"Initiating payment processing and notifying the user upon success."}),"\n",(0,s.jsx)(n.li,{children:"Sending shipping notifications."}),"\n",(0,s.jsx)(n.li,{children:"Confirming delivery and conducting customer surveys and analytics."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"As systems grow in complexity, maintaining these consumers becomes increasingly challenging. Visibility equally suffers."}),"\n",(0,s.jsx)(n.h2,{id:"introducing-gallifrey-rules",children:"Introducing Gallifrey-Rules"}),"\n",(0,s.jsx)(n.p,{children:"Gallifrey-Rules enforces disciplined event handling practices in two primary ways:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Definition"}),": Mandates the definition of all events with basic properties such as event name, associated entity, event ID and the event payload."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Modular Architecture"}),": Utilizes plugins or modules to encapsulate functionalities of different roles."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"key-benefits-for-developers",children:"Key Benefits for Developers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Structured Event-Driven Architecture (EDA)"}),": Enforces a disciplined approach to event-driven development, ensuring consistency and best practices across your projects."]}),"\n",(0,s.jsxs)(n.li,{children:["Transform ",(0,s.jsx)(n.strong,{children:"Consumer Blackbox"})," => Modular design with Filters, Rules, DataObjects, and Actions as customizable plugins, enabling seamless extension and flexibility."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dynamic Plugin Management"}),": All modules, including plugins and providers, are dynamically loaded and referenced by name,"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Namespace-Oriented Projects"}),": Projects are organized into ",(0,s.jsx)(n.strong,{children:"Namespaces"}),", each consisting of a ",(0,s.jsx)(n.strong,{children:"Namespace Schema"})," and a list of modules, promoting modularity and reusability."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Abstracted Configuration Management"}),": Configurations are managed through an abstracted provider, allowing them to be sourced from any backend, ensuring flexibility in various environments."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Logging and Metrics"}),": Logging and metrics are abstracted behind providers, offering a consistent and extensible approach to monitoring and diagnostics. Out of the box support for ",(0,s.jsx)(n.a,{href:"https://www.influxdata.com/",children:"InfluxDB"}),"/",(0,s.jsx)(n.a,{href:"https://grafana.com/",children:"Grafana"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Journal Logging"}),": Capturing/grouping high level logs that happen during a single event."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scheduled Events Support"}),": Native support for scheduling events in the future, with rules that can seamlessly trigger new events based on business logic."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Distributed Locks"}),": Out-of-the-box support for distributed locks, enabling atomic event processing and ensuring data integrity across distributed systems."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Asynchronous Actions"}),": Actions can be easily converted into Async Actions with dedicated consumer topics, allowing for efficient time management and workload distribution."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Comprehensive Metrics Tracking"}),": Tracks counts and durations for each plugin type, enabling quick identification of performance bottlenecks, such as slow data pullers or actions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Enforced Naming Conventions"}),": Consistent naming conventions across the library, enhancing the developer experience and reducing the likelihood of errors."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Resilient Error Handling"}),": The ReactToFailure mechanism is abstracted behind a provider, giving developers control over how to handle unexpected errors in a customizable and consistent manner."]}),"\n",(0,s.jsxs)(n.li,{children:["Fully supports ",(0,s.jsx)(n.a,{href:"https://www.typescriptlang.org/",children:"TypeScript"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gallifrey-Rules redefines event handling in Node.js, providing a robust framework that enhances reusability, maintainability, and visibility, making it an essential tool for developers dealing with complex real-time systems."}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsxs)(n.p,{children:["Head on to the ",(0,s.jsx)(n.a,{href:"/docs/getting-started/",children:"Getting started documentation."}),', "No time for dilly-dallying!"']})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);
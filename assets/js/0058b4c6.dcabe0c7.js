"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"What is Gallifrey Rules?","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Sample App Namespace Schema","href":"/docs/getting-started/sample-app-namespace-schema","docId":"getting-started/sample-app-namespace-schema","unlisted":false},{"type":"link","label":"Entities/Events/Rules in the Schema","href":"/docs/getting-started/entities-events-rules-namespace-schema","docId":"getting-started/entities-events-rules-namespace-schema","unlisted":false},{"type":"link","label":"Consumers in the Schema","href":"/docs/getting-started/consumers-schema","docId":"getting-started/consumers-schema","unlisted":false},{"type":"link","label":"The Modules","href":"/docs/getting-started/the-modules","docId":"getting-started/the-modules","unlisted":false},{"type":"link","label":"Reviewing the steps","href":"/docs/getting-started/recap","docId":"getting-started/recap","unlisted":false}],"href":"/docs/getting-started/"},{"type":"category","label":"Advanced","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Scheduled Events Setup","href":"/docs/advanced/scheduled-events","docId":"advanced/scheduled-events","unlisted":false},{"type":"link","label":"Configs","href":"/docs/advanced/configs","docId":"advanced/configs","unlisted":false},{"type":"link","label":"Async Actions","href":"/docs/advanced/async-actions","docId":"advanced/async-actions","unlisted":false},{"type":"link","label":"Distributed locks","href":"/docs/advanced/distributed-locks","docId":"advanced/distributed-locks","unlisted":false},{"type":"link","label":"Error Handling","href":"/docs/advanced/error-handling","docId":"advanced/error-handling","unlisted":false},{"type":"link","label":"Default Built in Modules","href":"/docs/advanced/default-built-in-modules","docId":"advanced/default-built-in-modules","unlisted":false},{"type":"link","label":"Environment Variables","href":"/docs/advanced/environment-variables","docId":"advanced/environment-variables","unlisted":false},{"type":"link","label":"Testing","href":"/docs/advanced/testing","docId":"advanced/testing","unlisted":false}]},{"type":"link","label":"Glossary","href":"/docs/glossary","docId":"glossary","unlisted":false}]},"docs":{"advanced/async-actions":{"id":"advanced/async-actions","title":"Async Actions","description":"A notable feature of the Gallifrey Rules engine is its ability to convert synchronous Actions into asynchronous (Async) Actions. Typically, when an event is received and a rule is executed, any action triggered by that rule is executed synchronously as part of the event processing. However, in many scenarios, certain actions may benefit from being executed asynchronously.","sidebar":"tutorialSidebar"},"advanced/configs":{"id":"advanced/configs","title":"Configs","description":"In any software project, configuration values are crucial. Gallifrey Rules enhances this experience by offering unparalleled flexibility in managing these values across various levels of granularity.","sidebar":"tutorialSidebar"},"advanced/default-built-in-modules":{"id":"advanced/default-built-in-modules","title":"Default Built in Modules","description":"ConsoleJournalLoggerProvider","sidebar":"tutorialSidebar"},"advanced/distributed-locks":{"id":"advanced/distributed-locks","title":"Distributed locks","description":"Distributed locks are a highly beneficial feature for mitigating race conditions in distributed systems. With the ability of your consumers to scale and operate in parallel, there are scenarios where simultaneous processing of events with the same identifier occurs. For instance, processing multiple instances of Order ID 10452 in parallel can lead to conflicts and race conditions.","sidebar":"tutorialSidebar"},"advanced/environment-variables":{"id":"advanced/environment-variables","title":"Environment Variables","description":"This document outlines the environment variables used by Gallifrey Rules. These variables can be set in your environment to configure various aspects of the library\'s behavior. Most environment variables are prefixed with GR_.","sidebar":"tutorialSidebar"},"advanced/error-handling":{"id":"advanced/error-handling","title":"Error Handling","description":"There is a handful of special Exception classes that you can use to change the engine\'s behavior.","sidebar":"tutorialSidebar"},"advanced/scheduled-events":{"id":"advanced/scheduled-events","title":"Scheduled Events Setup","description":"Out of the box, Gallifrey Rules gives you the ability to create events to be consumed in the future.","sidebar":"tutorialSidebar"},"advanced/testing":{"id":"advanced/testing","title":"Testing","description":"work in progress","sidebar":"tutorialSidebar"},"getting-started/consumers-schema":{"id":"getting-started/consumers-schema","title":"Consumers in the Schema","description":"In our example schema, we have a single consumer named new-orders-consumer, of type kafka.","sidebar":"tutorialSidebar"},"getting-started/entities-events-rules-namespace-schema":{"id":"getting-started/entities-events-rules-namespace-schema","title":"Entities/Events/Rules in the Schema","description":"In the previous page, we have established that we have a single entity orders. For orders, we have a single event called new-order. And","sidebar":"tutorialSidebar"},"getting-started/getting-started":{"id":"getting-started/getting-started","title":"Getting Started","description":"Gallifrey rules can run using any event streaming platform. Out of the box it supports Apache Kafka\xae","sidebar":"tutorialSidebar"},"getting-started/recap":{"id":"getting-started/recap","title":"Reviewing the steps","description":"Let\'s quickly recap what are the step needed to create a new project using Gallifrey Rules.","sidebar":"tutorialSidebar"},"getting-started/sample-app-namespace-schema":{"id":"getting-started/sample-app-namespace-schema","title":"Sample App Namespace Schema","description":"Let\'s start by checking the namespace schema of the sample application.","sidebar":"tutorialSidebar"},"getting-started/the-modules":{"id":"getting-started/the-modules","title":"The Modules","description":"Gallifrey Rules has a dynamic plugins loading system. The $modulesPath in the namespace schema takes a list of directories to load modules from dynamically. The loading is done recursively. The \'$\' is a special path that tells the engine to load the internal built in modules.","sidebar":"tutorialSidebar"},"glossary":{"id":"glossary","title":"Glossary","description":"Event Definition:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"What is Gallifrey Rules?","description":"Gallifrey Rules is a sophisticated Node.js library written in TypeScript, designed to streamline and enhance the management of real-time event-driven architectures.","sidebar":"tutorialSidebar"}}}}')}}]);